{"version":3,"sources":["components/CurrentButton/CurrentButton.tsx","components/UserForm/UserForm.module.css","components/InputField/InputField.tsx","components/UserForm/UserForm.tsx","components/AddUser/AddUser.tsx"],"names":["CurrentButton","buttonTitle","type","onClick","danger","module","exports","InputField","placeholder","addonBefore","value","onChange","name","UserForm","currentUserInfo","actionType","useState","userInfo","setUserInfo","usersStore","useStore","useEffect","undefined","address","street","suite","city","zipcode","geo","lat","lng","company","catchPhrase","bs","avatar","email","id","userList","length","phone","username","website","handleChange","event","currentTarget","className","style","form","addUserItem","console","log","editUser","AddUser"],"mappings":"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","file":"static/js/7.8d46f788.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport { Button } from 'antd';\r\n\r\ntype ButtonType = {\r\n  buttonTitle: string;\r\n  type?: 'text' | 'link' | 'ghost' | 'default' | 'primary' | 'dashed' | undefined;\r\n  onClick?: () => void;\r\n  danger?: boolean;\r\n}\r\n\r\nconst CurrentButton: FC<ButtonType> = ({buttonTitle, type, onClick, danger}: ButtonType): JSX.Element => {\r\n  return (\r\n    <Button\r\n      type={type}\r\n      onClick={onClick}\r\n      danger={danger}\r\n    >\r\n      {buttonTitle}\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default CurrentButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserForm_form__1cE1k\"};","import React, {ChangeEventHandler, FC} from 'react';\r\nimport { Input } from 'antd';\r\n\r\ntype InputFieldType = {\r\n  placeholder: string;\r\n  addonBefore: string;\r\n  name: string;\r\n  value?: string;\r\n  onChange: ChangeEventHandler;\r\n};\r\n\r\nconst InputField: FC<InputFieldType> = ({placeholder, addonBefore, value, onChange, name}: InputFieldType) => {\r\n\r\n  return (\r\n    <Input\r\n      placeholder={placeholder}\r\n      addonBefore={addonBefore}\r\n      value={value}\r\n      onChange={onChange}\r\n      name={name}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport InputField from '../InputField/InputField';\r\nimport {UserType} from '../../store/UsersStore';\r\nimport CurrentButton from '../CurrentButton/CurrentButton';\r\nimport style from './UserForm.module.css';\r\nimport {useStore} from '../../hooks/useStore';\r\n\r\ntype UserFormType = {\r\n  currentUserInfo?: UserType | undefined;\r\n  actionType: 'editing' | 'addition'\r\n}\r\n\r\nconst UserForm: FC<UserFormType> = ({currentUserInfo, actionType}: UserFormType) => {\r\n  const [userInfo, setUserInfo] = useState<UserType>();\r\n  const {usersStore} = useStore();\r\n\r\n  useEffect(() => {\r\n    if (currentUserInfo != undefined) {\r\n      setUserInfo(currentUserInfo);\r\n    } else {\r\n      setUserInfo({\r\n        address: {\r\n          street: '',\r\n          suite: '',\r\n          city: '',\r\n          zipcode: '',\r\n          geo: {\r\n            lat: '',\r\n            lng: '',\r\n          },\r\n        },\r\n        company: {\r\n          name: '',\r\n          catchPhrase: '',\r\n          bs: '',\r\n        },\r\n        avatar: '',\r\n        email: '',\r\n        id: usersStore.userList.length + 1,\r\n        name: '',\r\n        phone: '',\r\n        username: '',\r\n        website: '',\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const {value, name} = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'address.city':\r\n        setUserInfo( userInfo => {\r\n          if (userInfo != undefined) {\r\n            return {\r\n              ...userInfo,\r\n              address: {\r\n                ...userInfo?.address,\r\n                city: value\r\n              }\r\n            }\r\n          }\r\n        });\r\n        break;\r\n      case 'address.street':\r\n        setUserInfo( userInfo => {\r\n          if (userInfo != undefined) {\r\n            return {\r\n              ...userInfo,\r\n              address: {\r\n                ...userInfo?.address,\r\n                street: value\r\n              }\r\n            }\r\n          }\r\n        });\r\n        break;\r\n      case 'company.name':\r\n        setUserInfo( userInfo => {\r\n          if (userInfo != undefined) {\r\n            return {\r\n              ...userInfo,\r\n              company: {\r\n                ...userInfo?.company,\r\n                name: value\r\n              }\r\n            }\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        setUserInfo(userInfo => {\r\n        if (userInfo != undefined) {\r\n          return {...userInfo, [name]: value}\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    switch (actionType) {\r\n      case 'addition':\r\n        setUserInfo(userInfo => {\r\n          if (userInfo != undefined) {\r\n            return {\r\n              ...userInfo,\r\n              id: usersStore.userList.length + 1,\r\n            }\r\n          }\r\n        });\r\n        if (userInfo != undefined) {\r\n          usersStore.addUserItem(userInfo);\r\n        } else {\r\n          console.log('Ошибка, заполните поля')\r\n        }\r\n        break;\r\n      case 'editing':\r\n        usersStore.editUser(userInfo!);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.form}>\r\n        <InputField\r\n          placeholder='Name'\r\n          addonBefore='Name: '\r\n          name='name'\r\n          value={userInfo?.name}\r\n          onChange={handleChange}\r\n        />\r\n        <InputField\r\n          placeholder='Nick name'\r\n          addonBefore='Nick name: '\r\n          name='username'\r\n          value={userInfo?.username}\r\n          onChange={handleChange}\r\n        />\r\n        <InputField\r\n          placeholder='Email'\r\n          addonBefore='Email: '\r\n          name='email'\r\n          value={userInfo?.email}\r\n          onChange={handleChange}\r\n        />\r\n        <InputField\r\n          placeholder='City'\r\n          addonBefore='City: '\r\n          name='address.city'\r\n          value={userInfo?.address.city}\r\n          onChange={handleChange}\r\n        />\r\n        <InputField\r\n          placeholder='Street'\r\n          addonBefore='Street: '\r\n          name='address.street'\r\n          value={userInfo?.address.street}\r\n          onChange={handleChange}\r\n        />\r\n        <InputField\r\n          placeholder='Job'\r\n          addonBefore='Job: '\r\n          name='company.name'\r\n          value={userInfo?.company.name}\r\n          onChange={handleChange}\r\n        />\r\n        <InputField\r\n          placeholder='Website'\r\n          addonBefore='Website: '\r\n          name='website'\r\n          value={userInfo?.website}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <CurrentButton\r\n        buttonTitle='Save'\r\n        type='primary'\r\n        onClick={handleClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, {FC} from 'react';\r\nimport UserForm from '../UserForm/UserForm';\r\n\r\nconst AddUser: FC = () => {\r\n  return (\r\n    <>\r\n        <UserForm actionType='addition'/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"sourceRoot":""}