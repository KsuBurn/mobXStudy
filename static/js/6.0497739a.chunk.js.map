{"version":3,"sources":["components/CurrentButton/CurrentButton.tsx","components/UserRowItem/UserRowItem.module.css","components/UserList/UserList.module.css","components/UserRowItem/UserRowItem.tsx","components/UserList/UserList.tsx"],"names":["CurrentButton","buttonTitle","type","onClick","danger","module","exports","UserRowItem","item","usersStore","useStore","className","style","row","cell","to","id","rowLink","name","username","email","userId","deleteUser","UserList","observer","useState","isDirectSorting","setIsDirectSorting","handleChange","event","target","value","updateFilter","handleSort","sortValueA","sortValueB","sortUsers","userList","slice","sort","a","b","currentTarget","wrap","tableHead","userListHead","map","key","title","htmlType","tableSearch","placeholder","onChange","index"],"mappings":"wGAAA,6BAsBeA,IAZuB,SAAC,GAAmE,IAAlEC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,OAClE,OACE,kBAAC,IAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,OAAQA,GAEPH,K,sMChBPI,EAAOC,QAAU,CAAC,IAAM,yBAAyB,KAAO,0BAA0B,QAAU,+B,oBCA5FD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,YAAc,gC,wHCuFvFC,EArD0B,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAClCC,EAAcC,cAAdD,WAMP,OACE,wBAAIE,UAAWC,IAAMC,KACnB,wBAAIF,UAAWC,IAAME,MACnB,kBAAC,IAAD,CACEC,GAAE,gBAAWP,EAAKQ,IAClBL,UAAWC,IAAMK,SAEhBT,EAAKQ,KAGV,wBAAIL,UAAWC,IAAME,MACnB,kBAAC,IAAD,CACEC,GAAE,gBAAWP,EAAKQ,IAClBL,UAAWC,IAAMK,SAEhBT,EAAKU,OAGV,wBAAIP,UAAWC,IAAME,MACnB,kBAAC,IAAD,CACEC,GAAE,gBAAWP,EAAKQ,IAClBL,UAAWC,IAAMK,SAEhBT,EAAKW,WAGV,wBAAIR,UAAWC,IAAME,MACnB,kBAAC,IAAD,CACEC,GAAE,gBAAWP,EAAKQ,IAClBL,UAAWC,IAAMK,SAEhBT,EAAKY,QAGV,4BACE,kBAACpB,EAAA,EAAD,CACEC,YAAY,MACZG,QAAQ,EACRD,QAAS,kBA1CIkB,EA0Ccb,EAAKQ,QAzCtCP,EAAWa,WAAWD,GADJ,IAACA,Q,6CC3BjBE,EAAeC,aAAS,WAAO,IAC5Bf,EAAcC,cAAdD,WAD2B,EAEYgB,oBAAS,GAFrB,mBAE3BC,EAF2B,KAEVC,EAFU,KAgB5BC,EAAe,SAACC,GAAsD,IAAD,EACnDA,EAAMC,OAArBC,EADkE,EAClEA,MAAOb,EAD2D,EAC3DA,KAEdT,EAAWuB,aAAaD,EAAOb,IAG3Be,EAAa,SAACJ,GAClB,IAAIK,EACAC,EAEEC,EAAY3B,EAAW4B,SAASC,QAAQC,MAAK,SAACC,EAAQC,GAI1D,OAHAP,EAAaM,EAAEX,EAAMa,cAAcxB,MACnCiB,EAAaM,EAAEZ,EAAMa,cAAcxB,MAE/BgB,EAAaC,EACRT,GAAmB,EAAI,EAG5BQ,EAAaC,EACRT,EAAkB,GAAK,EAGzB,KAGTjB,EAAW2B,UAAUA,GACrBT,GAAoBD,IAGtB,OACE,oCACE,2BAAOf,UAAWC,IAAM+B,MACtB,+BACA,wBAAIhC,UAAWC,IAAMgC,WAClBC,EAAaC,KAAI,SAAAtC,GAAI,OACpB,wBAAIuC,IAAKvC,EAAKwC,OACZ,kBAAC,IAAD,CACEC,SAAS,SACT/B,KAAMV,EAAKU,KACXf,QAAS8B,GAERzB,EAAKwC,aAMd,+BACA,wBAAIrC,UAAWC,IAAMsC,aAClBL,EAAaC,KAAI,SAAAtC,GAAI,OACpB,wBAAIuC,IAAKvC,EAAKwC,OACZ,kBAAC,IAAD,CACE9B,KAAMV,EAAKU,KACXiC,YAAa3C,EAAKwC,MAClBI,SAAUxB,SAhEfnB,EAAW4B,SAASC,QAAQQ,KAAI,SAACtC,EAAwB6C,GAC9D,OACE,kBAAC,EAAD,CACEN,IAAKM,EACL7C,KAAMA,SAoEV,kBAAC,IAAD,CAAMO,GAAG,aACP,kBAACf,EAAA,EAAD,CACEC,YAAY,eACZC,KAAK,iBAOAqB","file":"static/js/6.0497739a.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport { Button } from 'antd';\r\n\r\ntype ButtonType = {\r\n  buttonTitle: string;\r\n  type?: 'text' | 'link' | 'ghost' | 'default' | 'primary' | 'dashed' | undefined;\r\n  onClick?: () => void;\r\n  danger?: boolean;\r\n}\r\n\r\nconst CurrentButton: FC<ButtonType> = ({buttonTitle, type, onClick, danger}: ButtonType): JSX.Element => {\r\n  return (\r\n    <Button\r\n      type={type}\r\n      onClick={onClick}\r\n      danger={danger}\r\n    >\r\n      {buttonTitle}\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default CurrentButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"UserRowItem_row__1oZ9d\",\"cell\":\"UserRowItem_cell__3XaZS\",\"rowLink\":\"UserRowItem_rowLink__3iMWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"UserList_wrap__3ZnGh\",\"tableHead\":\"UserList_tableHead__1KCyp\",\"tableSearch\":\"UserList_tableSearch__1YwrX\"};","import React, {FC} from 'react';\r\nimport style from './UserRowItem.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport CurrentButton from '../CurrentButton/CurrentButton';\r\nimport {useStore} from '../../hooks/useStore';\r\n\r\nexport type UserRowItemProps = {\r\n  address: {\r\n    street: string;\r\n    suite: string;\r\n    city: string;\r\n    zipcode: string;\r\n    geo: {\r\n      lat: string;\r\n      lng: string;\r\n    };\r\n  };\r\n  company: {\r\n    name: string;\r\n    catchPhrase: string;\r\n    bs: string;\r\n  };\r\n  avatar: string;\r\n  email: string;\r\n  id: number;\r\n  name: string;\r\n  phone: string;\r\n  username: string;\r\n  website: string;\r\n};\r\n\r\nexport type UserRowItemType = {\r\n  item: UserRowItemProps;\r\n}\r\n\r\nconst UserRowItem: FC<UserRowItemType> = ({item}: UserRowItemType) => {\r\n  const {usersStore} = useStore();\r\n\r\n  const handleClick = (userId: number) => {\r\n    usersStore.deleteUser(userId)\r\n  };\r\n\r\n  return (\r\n    <tr className={style.row}>\r\n      <td className={style.cell}>\r\n        <Link\r\n          to={`/user/${item.id}`}\r\n          className={style.rowLink}\r\n        >\r\n          {item.id}\r\n        </Link>\r\n      </td>\r\n      <td className={style.cell}>\r\n        <Link\r\n          to={`/user/${item.id}`}\r\n          className={style.rowLink}\r\n        >\r\n          {item.name}\r\n        </Link>\r\n      </td>\r\n      <td className={style.cell}>\r\n        <Link\r\n          to={`/user/${item.id}`}\r\n          className={style.rowLink}\r\n        >\r\n          {item.username}\r\n        </Link>\r\n      </td>\r\n      <td className={style.cell}>\r\n        <Link\r\n          to={`/user/${item.id}`}\r\n          className={style.rowLink}\r\n        >\r\n          {item.email}\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        <CurrentButton\r\n          buttonTitle='Del'\r\n          danger={true}\r\n          onClick={() => handleClick(item.id)}\r\n        />\r\n      </td>\r\n    </tr>\r\n\r\n  );\r\n};\r\n\r\nexport default UserRowItem;\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport userListHead from './userListHead.json';\r\nimport UserRowItem from '../UserRowItem/UserRowItem';\r\nimport {UserRowItemProps} from '../UserRowItem/UserRowItem';\r\nimport style from './UserList.module.css';\r\nimport {Button, Input} from 'antd';\r\nimport {useStore} from '../../hooks/useStore';\r\nimport {observer} from 'mobx-react';\r\nimport CurrentButton from '../CurrentButton/CurrentButton';\r\n\r\nconst UserList: FC = observer(() => {\r\n  const {usersStore} = useStore();\r\n  const [isDirectSorting, setIsDirectSorting] = useState(true);\r\n\r\n  const UsersRow = () => {\r\n\r\n    return usersStore.userList.slice().map((item: UserRowItemProps, index: number) => {\r\n      return (\r\n        <UserRowItem\r\n          key={index}\r\n          item={item}\r\n        />\r\n      )\r\n    })\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const {value, name} = event.target;\r\n\r\n    usersStore.updateFilter(value, name);\r\n  };\r\n\r\n  const handleSort = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    let sortValueA: object;\r\n    let sortValueB: object;\r\n\r\n    const sortUsers = usersStore.userList.slice().sort((a: any, b: any) => {\r\n      sortValueA = a[event.currentTarget.name];\r\n      sortValueB = b[event.currentTarget.name];\r\n\r\n      if (sortValueA < sortValueB) {\r\n        return isDirectSorting ? -1 : 1;\r\n      }\r\n\r\n      if (sortValueA > sortValueB) {\r\n        return isDirectSorting ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    usersStore.sortUsers(sortUsers);\r\n    setIsDirectSorting(!isDirectSorting);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table className={style.wrap}>\r\n        <thead>\r\n        <tr className={style.tableHead}>\r\n          {userListHead.map(item => (\r\n            <th key={item.title}>\r\n              <Button\r\n                htmlType='button'\r\n                name={item.name}\r\n                onClick={handleSort}\r\n              >\r\n                {item.title}\r\n              </Button>\r\n            </th>\r\n          ))}\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr className={style.tableSearch}>\r\n          {userListHead.map(item => (\r\n            <td key={item.title}>\r\n              <Input\r\n                name={item.name}\r\n                placeholder={item.title}\r\n                onChange={handleChange}\r\n              />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n        {UsersRow()}\r\n        </tbody>\r\n      </table>\r\n      <Link to='/add_user'>\r\n        <CurrentButton\r\n          buttonTitle='Add new user'\r\n          type='primary'\r\n        />\r\n      </Link>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}